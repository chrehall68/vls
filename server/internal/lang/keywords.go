package lang

var Keywords = []string{
	"endmodule",
	"begin",
	"end",
	"endcase",
	"endgenerate",
	"assign",
	"initial",
	"negedge",
	"posedge",
	"default",
	"endtask",
	"include",
	"define",
	"timescale",
	"wire",
	"reg",
	"genvar",
	"parameter",
	"integer",
	"input",
	"output",
	"inout",
	"defparam",
}
var Snippets = map[string]string{
	"module":   "module $1();\nendmodule",
	"generate": "generate\nendgenerate",
	"case":     "case ($1)\nendcase",
	"task":     "task $1();\nendtask",
	"if":       "if ($1) begin\nend",
	"else":     "else begin\nend",
	"for":      "for ($1; $2; $3) begin\nend",
	"always":   "always @($1) begin\nend",
	"buf":      "buf ${1:name}(${2:a}, ${3:b});",
	"not":      "not ${1:name}(${2:a}, ${3:b});",
	"and":      "and ${1:name}(${2:a}, ${3:b});",
	"or":       "or ${1:name}(${2:a}, ${3:b});",
	"xor":      "xor ${1:name}(${2:a}, ${3:b});",
	"xnor":     "xnor ${1:name}(${2:a}, ${3:b});",
	"nand":     "nand ${1:name}(${2:a}, ${3:b});",
	"nor":      "nor ${1:name}(${2:a}, ${3:b});",
	"bufif0":   "bufif0 ${1:name}(${2:a}, ${3:b}, ${4:c});",
	"bufif1":   "bufif1 ${1:name}(${2:a}, ${3:b}, ${4:c});",
	"notif0":   "notif0 ${1:name}(${2:a}, ${3:b}, ${4:c});",
	"notif1":   "notif1 ${1:name}(${2:a}, ${3:b}, ${4:c});",
}
